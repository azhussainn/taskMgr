{"version":3,"sources":["components/Notifications/Notification.component.jsx","components/addTask/addTask.styles.jsx","components/addTask/addTask.component.jsx","components/todos/todos.styles.jsx","components/todos/todos.component.jsx","components/greeting/Greeting.component.jsx","components/header/Header.style.jsx","components/header/Header.component.jsx","App.js","index.js"],"names":["Notifications","action","type","title","message","console","log","store","addNotification","insert","container","animationIn","animationOut","dismiss","duration","onScreen","AddTaskContainer","styled","div","Form","form","TextArea","textarea","Label","label","Select","select","Input","input","AddTask","useState","name","setName","priority","setPriority","futureDate","setFutureDate","onSubmit","e","preventDefault","createdAt","Date","now","dueDate","newTask","taskStatus","axios","post","then","res","Notification","catch","err","value","rows","placeholder","onChange","target","required","disabled","TodoItemContainer","ChildContainer","Title","h1","Text","h2","Option","option","RemoveItem","button","TodoContainer","todos","setTodos","useEffect","get","data","dateTimeFormat","date","slice","handleChange","id","url","newTodo","updatedTodos","map","todo","_id","updateTasks","handleClick","filter","removeTask","length","className","onClick","Greeting","timeOfDay","hours","getHours","style","color","fontSize","textAlign","marginBottom","NavBar","ul","HeaderContainer","header","HeaderTitle","h3","Header","username","to","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.433879f3.chunk.js","sourcesContent":["import { store } from 'react-notifications-component';\n\nconst Notifications = (action, type) => {\n\n    console.log(type)\n\n        let title\n        let message\n\n        switch(action){\n            case \"success-add\":\n                title='Task Added'\n                message=\"Your new Task has been successfully added\"\n                break\n            case \"error-add\":\n                title = \"Error\"\n                message=\"Failed to add Task\"\n                break\n            case \"success-remove\":\n                title=\"Task Removed\"\n                message=\"Your Task has been successfully removed\"\n                break\n            case \"error-remove\":\n                title=\"Error\"\n                message=\"Failed to remove task\"\n                break\n\n            default:\n                title=\"\"\n                message=\"\"\n        }\n        store.addNotification({\n            title: title,\n            message: message,\n            type: type,\n            insert: \"top\",\n            container: \"top-right\",\n            animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n            animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n            dismiss: {\n              duration: 2000,\n              onScreen: true\n            }\n          })\n}\n\nexport default Notifications","import styled from 'styled-components'\n\nexport const AddTaskContainer = styled.div``\n\nexport const Form = styled.form`\n    display: flex;\n    flex-direction : column;\n`\n\nexport const TextArea = styled.textarea`\n    padding : 10px;\n    font-size: 24px;\n`\n\nexport const Label = styled.label`\n    font-size : 18px;\n    padding-top:8px;\n    margin-top: 20px;\n`\n\nexport const Select = styled.select`\n    height : 40px;\n    font-size: 24px;\n`\n\nexport const Input = styled.input`\n    height: 45px;\n    font-size: 24px;\n`","import React, {useState} from 'react';\nimport axios from 'axios'\nimport ReactNotification from 'react-notifications-component'\nimport 'react-notifications-component/dist/theme.css'\nimport Notification from '../Notifications/Notification.component'\nimport {\n    AddTaskContainer,\n    Form,\n    TextArea,\n    Label,\n    Select,\n    Input\n\n} from './addTask.styles'\n\nconst AddTask = () => {\n\n    const [name, setName] = useState(\"\")\n    const [priority, setPriority] = useState(\"\")\n    const [futureDate, setFutureDate] = useState(\"\")\n\n\n   const handleSubmit = (e) =>{\n       e.preventDefault()\n       const createdAt = new Date(Date.now())\n       const dueDate = new Date(futureDate)\n       const taskStatus = 'Review'\n       const newTask = {\n           name,\n           priority,\n           dueDate,\n           createdAt,\n           taskStatus\n       }\n       axios.post(\n        'http://localhost:4000/api/addTask',\n        newTask\n    ).then(res => Notification('success-add', \"success\"))\n    .catch(err => Notification('error-add', 'danger'))\n\n    setName(\"\")\n    setPriority(\"\")\n    setFutureDate(\"\")\n\n   }\n\n    return(\n    <AddTaskContainer>\n        <ReactNotification />\n\n        <Form onSubmit={handleSubmit}>\n            <TextArea\n                type='text'\n                name='name'\n                value={name}\n                rows={5}\n                placeholder=\"Task Details\"\n                onChange={(e) => setName(e.target.value)}\n                required\n            ></TextArea>\n\n            <Label>Priority</Label>\n            <Select value={priority}\n                onChange={(e) => setPriority(e.target.value)}\n                required\n            >\n                <option disabled></option>\n                <option value=\"Max\">Max</option>\n                <option value=\"Normal\">Normal</option>\n                <option value=\"Low\">Low</option>\n            </Select>\n\n            <Label>Due Date</Label>\n            <Input\n                type=\"datetime-local\"\n                value={futureDate}\n                onChange={(e) => setFutureDate(e.target.value)}\n                required\n            />\n\n            <Input\n                type='submit'\n                value=\"Add Task\"\n            />\n        </Form>\n\n    </AddTaskContainer>\n)}\n\nexport default AddTask","import styled from 'styled-components'\n\nexport const TodoItemContainer = styled.div`\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n    padding: 30px;\n    display: flex;\n    flex-direction : column;\n    border-bottom: 12px solid #e8e8e8;\n`\n\nexport const ChildContainer = styled.div`\n    display: flex;\n    justify-content: space-around;\n    padding: 20px;\n\n`\n\nexport const Title = styled.h1`\n    margin : 0 0 40px 0;\n    text-transform : capitalize;\n`\n\nexport const Text = styled.h2`\n    margin : 0;\n`\n\nexport const Label = styled.label`\n    font-size : 20px;\n    padding-top : 18px;\n`\n\nexport const Select = styled.select`\n    height: 60px;\n    font-size : 20px;\n    background-color : #e0d1e0;\n    cursor : pointer;\n`\n\nexport const Option = styled.option`\n    cursor : pointer;\n`\nexport const RemoveItem = styled.button`\n    background-color: #eddaa6;\n    height: 40px;\n    border: 1px solid #827349;\n    font-size: 20px;\n    margin-top: 35px;\n`","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport ReactNotification from 'react-notifications-component'\nimport 'react-notifications-component/dist/theme.css'\nimport Notification from '../Notifications/Notification.component'\n\nimport {\n    TodoItemContainer,\n    ChildContainer,\n    Title,\n    Text,\n    Label,\n    Select,\n    Option,\n    RemoveItem\n\n} from './todos.styles'\n\n\nconst TodoContainer = () => {\n\n    const [todos, setTodos] = useState([])\n    useEffect(() => {\n\n        const getAllTodos = () => {\n\n            axios.get('http://localhost:4000/api/allTasks')\n                .then(res => setTodos(res.data))\n                .catch(err => console.log(err))\n            }\n            getAllTodos()\n\n    }, [])\n\n    const updateTasks = newTodo =>{\n        const updatedTodos = todos.map(todo => {\n            if(todo._id !== newTodo._id){\n                return todo\n            }\n            return newTodo\n        })\n        setTodos(updatedTodos)\n    }\n\n    const removeTask = newTodo => {\n        const updatedTodos = todos.filter(todo => {\n            return todo._id !== newTodo._id\n        })\n        setTodos(updatedTodos)\n\n    }\n\n    const dateTimeFormat = (date) => {\n        const newDate = date.slice(0, 10)\n        const time = date.slice(11, 16)\n        const newDateTime = newDate + \" \" + time\n\n        return newDateTime\n    }\n    const handleChange = (e, id) => {\n        const { name, value } = e.target\n        let url\n        let data\n        if(name === 'priority'){\n            url = 'http://localhost:4000/api/changePriority'\n            data = {\n                id,\n                priority : value\n            }\n        }else{\n            url = 'http://localhost:4000/api/changeTaskStatus'\n            data = {\n                id,\n                taskStatus : value\n            }\n        }\n        axios.post(url, data)\n        .then(res => updateTasks(res.data))\n        .catch(err =>  console.log(err))\n    }\n\n    const handleClick = (todo) => {\n        axios.post(`http://localhost:4000/api/deleteTask`, {id : todo._id})\n        .then(res => {\n            Notification(\"success-remove\", \"success\")\n            removeTask(res.data)\n        })\n        .catch(err => Notification(\"error-remove\", \"danger\"))\n    }\n\n    return(\n    <div>\n        <ReactNotification />\n        {\n            todos.length ? \n            todos.map(todo => (\n                <TodoItemContainer key={todo._id}\n                    className={todo.taskStatus === \"Done\" &&\n                    \"completedTask\"\n                }\n                >\n                    <Title>{todo.name}</Title>\n                    <ChildContainer>\n                        <Text>Priority : {todo.priority}</Text>\n                        <Text>Task Status : {todo.taskStatus}</Text>\n                    </ChildContainer>\n\n                    <Text>Created At : {dateTimeFormat(todo.createdAt)} </Text>\n                    <Text>Due Date  &nbsp; : {dateTimeFormat(todo.dueDate)}</Text>\n\n\n                    <Label>Change Priority</Label>\n                    <Select\n                        value={todo.priority}\n                        onChange={(e) => handleChange(e, todo._id)}\n                        name=\"priority\"\n                    >\n                        <Option disabled></Option>\n                        <Option value=\"Max\">Max</Option>\n                        <Option value=\"Normal\">Normal</Option>\n                        <Option value=\"Low\">Low</Option>\n                    </Select>\n\n                    <Label>Change Task Status</Label>\n                    <Select\n                        value={todo.taskStatus}\n                        onChange={(e) => handleChange(e, todo._id)}\n                        name=\"taskStatus\"\n                    >\n                        <Option disabled></Option>\n                        <Option value=\"Review\">Review</Option>\n                        <Option value=\"On-going\" >OnGoing</Option>\n                        <Option value=\"Done\">Done</Option>\n                    </Select>\n                    <RemoveItem\n                        onClick={() => handleClick(todo)}\n                    >\n                        Delete Task\n                    </RemoveItem>\n                </TodoItemContainer>\n            )) :\n            <h1>No Tasks Found</h1>\n        }\n    </div>\n\n)}\n\nexport default TodoContainer","import React from 'react'\n\nconst Greeting = () => {\n\n    const date = new Date()\n    const hours = date.getHours()\n    let timeOfDay\n    if(hours !== 0 && hours >= 6 && hours <= 12){\n        timeOfDay = 'morning'\n    }else if(hours >= 13 && hours <= 17){\n        timeOfDay = 'afternoon'\n    }else{\n        timeOfDay = 'evening'\n    }\n\n    return (\n        <div\n            style={{\n                color : 'purple',\n                fontSize : 22,\n                textAlign : 'center',\n                marginBottom : 20\n            }}\n        >\n            <p>Good {timeOfDay} &nbsp;\n                <i className={\n                    timeOfDay === 'morning' ? \"fas fa-sun\"\n                    : timeOfDay === 'evening' ? \"fas fa-moon\"\n                    : \"fas fa-cloud-sun\"}\n                    style={{\n                        color : timeOfDay === 'morning' ? \"yellow\"\n                        : timeOfDay === 'evening' ? \"#c4c4c4\"\n                        : \"#e39e49\"\n                    }}\n                >\n                </i>\n            </p>\n        </div>\n    )\n}\n\nexport default Greeting\n\n","import styled from 'styled-components'\n\nexport const NavBar = styled.ul`\n    color: black;\n    margin-bottom: 15px;\n    text-align: center;\n    list-style: none;\n    margin: 0;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;\n    height:60px;   /* Height of the footer */\n    background:rgba(102, 204, 255, 0.149);\n`\n\nexport const HeaderContainer = styled.header`\n    margin : 18px;\n    color : teal;\n    fontSize : 22px;\n`\n\nexport const HeaderTitle = styled.h3`\n    text-align : center;\n`","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Greeting from '../greeting/Greeting.component'\nimport {\n    NavBar,\n    HeaderContainer,\n    HeaderTitle\n\n} from './Header.style'\n\nconst Header  = ({username}) =>\n    (\n        <>\n            <nav>\n                <NavBar>\n                    <Link to='/'>\n                        Home\n                    </Link>\n                    <Link to=\"/addTask\">\n                        AddTask\n                    </Link>\n                </NavBar>\n            </nav>\n            <HeaderContainer>\n                <HeaderTitle>\n                    Welcome, {username}\n                <Greeting />\n                </HeaderTitle>\n            </HeaderContainer>\n        </>\n        )\n\nexport default Header\n","import React from 'react';\nimport {Switch, Route} from 'react-router-dom'\nimport AddTask from './components/addTask/addTask.component'\nimport TodoContainer from './components/todos/todos.component'\nimport Header from './components/header/Header.component'\n\nconst App = () => (\n    <div>\n        <Header username=\"Azhar\"/>\n        <Switch>\n            <Route exact path='/'>\n                <TodoContainer />\n            </Route>\n            <Route path='/addTask'>\n                <AddTask />\n            </Route>\n        </Switch>\n    </div>\n)\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}